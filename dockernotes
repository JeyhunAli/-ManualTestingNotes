docker is virtual container which will host software in this container  
 
docker is mostly created for developers by the developers
Docker is software which will help testing team or dev team to build to manage to secure the application 
anywhere in any platform 

earlier before the docker how was that working let me explain 
lets say some years back we had one hardware on that hard ware we were installing one operation system 
like linuxOs or windows or mac and on that operation system we were installing one software its called hypervisor which is provided by AWS OR CISCO
OR SOME OTHER COMPANIES 

so on that hypervisor we had to install operating server os  for specific applications software for example 
my sql on windows operating server, tomcat another operating server, Jenkins on mac operating server, like different different vm-virtual machines 
this is procedure is cost more money more effort more configuration because each and every server, application needs its own configuration 
installation on vm to achieve better result 

but in 2013 docker container came to the market in 2010 they started to work on that and they released in 2013 
how is that work so 
one hardware in any platform it can be windows mac linuxOS  --> downloading one docker engine running on that operating system 
here we dont need any kind vm, or hypervisor
hypervisor- is where virtual machine vm is running its playing as a hardware role its also class host machine which is hosting to each and every 
virtual machine to run 

once we downloaded docker engine to our operating system 
on top of that we can download multiple containers for each and every software application 
container is software image which is holding all the information all the important files about that particular software 

lets say i want to download mySQL or Jenkins or any other software for that i need  libraries, binaries, port, and ip adress 
which is related all to one software application 
all this comes under one container and it will behave like actual software 
and in docker container no need to spend extra time for configuration installation make sure all the important files jars are downloaded settet up 
docker container takes care about all of them 

one of the biggest advantage of the docker container its 
lets say i have docker container and i have downloaded multiple software on my operating system 
docker container is managing all the software so they are totally isolated from each other 
those software applications they are not using each others resources  
resources i mean ram of the operating system size of the operating system memory of the operating system 
communication between those operating system are not happening trough docker container 
they are working independently thats why we don't need multiple operating system to execute or work on different different operating systems 

so let me explain how ram memory is working on docker container 
lets say in my mac machine i have 16gb ram and i have i allocated 6gb ram for Jenkins and out of 6 Jenkins is using 4gb ram 2gb is pending 
and my sql is using 4 gb out of 6gb pending 2 gb  so two pending gb plus 4 gb is wasted memory 

in earlier when we were using hypervisor technology that wasted gb ram  we couldn't assign to another software application so it was wasted 

but in docker container that pending gb ram is sharing by docker container among other application so we are not wasting any memory 

another biggest advantages of docker container to achieve cross browser and cross platform testing through only one operating system 

downloading one hub hosting service then downloading all the different platform like windows, ie, safari, chrome then execute all the test on different 
platforms independently achieving selenium grid 

docker is like based on linux command .....  to download docker go to the hub.docker.com and download it. its a little bit faster than windows in mac 


docker commands 
docker --version
docker -v
docker 
docker run hello-world ---->> This message shows that your installation appears to be working correctly.
docker ps ---->> shows how many containers are running 
docker ps -a  ----->> shows list of containers running and non running 
docker rm (image id -->> 0b9d1e7634e) for removing 

some of the container you can find in hub.docker.com
jeyhun01 as............alliy - alliys  
docker pull seqvence/static-site ---->> dummy container with the message
Jeys-MBP:manualTesting jey$ docker run -d -P seqvence/static-site ------dummy container 
all the images whatever softwre uwanted to downlaod they are available in hub.docker.com
when u pull the images container is not creating 
to create the container u have to run the images
docker images ------>> check how many images are available 
docker pull ubuntu ---->>> lets say u pulled ubuntu its available in the system but its not running 
to run it we use:
docker run -it -d ubuntu ---->> here -it means interactive mode -d means create dimend thread so i can access it 

if something wrong there option:
docker restart and container id it will restart specific container
docker stop and container id it will stop the container 
docker start and container id and it will start 
if u want to find the docker container id which is not running for that 
docker ps -a   means all the list 

docker exec -it containerid bash  ---->> it will take u to root of the container
root@f038df30dd7c:/# ls   list 

when u try to remove any container simple 
docker rm container id 
but before stop the container 
docker stop container id 
then docker rm container id 
once u deleted container id after that if you will this command 
docker images you will see same image still there if you want to delete images to simple 
docker rmi image id  here rm ---> remove rmi---->> is remove image


another command 
docker kill conatiner id  ----- > this will kill the conatiner id forcefully
if you want to get all the information about that container u can run 
docker inspedocct contaner id --- >> it will give u all the info in the form of jason

docker image prune -a will delete image which is related specific container 
docker image ls ----->> list of the images

docker system prune -a ----->>> will delete images and containers only those images which is containers are not running  
this will remove 
-all stopped containers 
all networks not in use ones 
- all images 
all build cache 


---------------------------------------------------------------------
from box 
docker pull selenium/hub
docker images
docker pull selenium/node-chrome-debug
docker images 
docker pull selenium/node-firefox-debug
docker images
docker restart container id    --- will restart the container
docker logs container id  ----- will show u load for particular container 

to create the container out of these 
docker run -d -p 4444:4444 --name selenium-hub -P selenium/hub
explanation --   
-d run on the background 
-p port num
-- name give any name 
-P selenium image



then go to browswer localhost:4444  -->> you will see grid container started
 
docker run -d -P --link selenium-hub:hub selenium/node-chrome-debug  ---->> one chrome container created 
if you one more than one or multiple chrome container you can run this command several time and you can have chrome containers up-and running 
                       
for firefox you can run this below cmd to create firefox container  
docker run -d -P --link selenium-hub:hub selenium/node-firefox-debug
docker logs ---->> is for to check the logs 


to run your test cases on grid you should search for these in hub.docker.com
selenium/hub
selenium/node-firefox-debug
selenium/node-chrome-debug
selenium/node-chrome-debug 


if you want to use docker in windows download it from  docker for windows toolbox 

          
 
   
                                                                       DOCKER COMPOSE NOTES AND IMPLEMENTATION

                docker composer is providing with one yml file which is taking care of starting docker starting chrome forefox browsers with node and hub 
it like json or xml file with this a lot time saving  but infostructure is remian same all the images pulling creating container 



docker compose yml file 

version: "3"
services:
  selenium-hub:
    image: selenium/hub:3.141.59-yttrium
    container_name: selenium-hub
    ports:
      - "4444:4444"

  chrome:
    image: selenium/node-chrome:3.141.59-yttrium
    deploy:
      replicas: 5
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444

  firefox:
    image: selenium/node-firefox:3.141.59-yttrium
    deploy:
      replicas: 5
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
















here replica: 5 means 5 broswer will be for chrome 5 for firefox 


create any folder in your documents then add this in your documents 
after that go to the terminal 
docker-compose -v   to check the version of compose
docker compose comes along with docker when u install docker compose is also there 
then 
docker-compose up      --->> means setup my infrastructure
control + c   ----> will stop running docker 
docker-compose up -d   -------- >> means while setting infrostructure run everything on the background
docker-compose down ---- also will shut dwon the server
docker-compose ps    --- will show how many conatainers are up and running 
one thing when u shut down server it will remove containers as well 
docker-compose ps -a will show non of the container after down
but 
docker-compose images will still show the images are there 
docker-compose scale chrome=3    here 3 is up to you how many browser u want u can set and you can have it 
this command for having server browsers 
docker-compose scale Firefox=3  ----->>> and this for the Firefox browser



once u run this cmd it will donwload all the images on top of the images it will create container and all thiese connected to the selenium hub 
after that open new tab make sure in your eclipse remote flag is equal to true    for example    remote = true 
then in new tab of the terminal run this 
mvn test 
or
mvn clean install 

it will run test cases on selenium grid if you want to see all the logs all the actions how its performing 
for that you can donwload vnc viewer --- find it on google here is link  ---> https://www.realvnc.com/en/connect/download/viewer/
once its downloaded and ready to use it look like a browser just you need to  write
localhost:3277  (number is gonna be different and as well as 4,5 maybe digits


but lets say in one of the company u have been asked to set up docker 
url then will be different 4444 will be there but the operating system u downloaded docker will give u one url will ne like 192.168.4444 something like that 
3 December 2020
Docker-compose --version
control+c ----> will shot down 
Docker-compose up -d   ---->>>    run on the background 
Docker-compose up
Docker-compose down   ---->>>> will stop container and it will remove all the container 






                                                                                    ZALENIUM
zalenium is open source tool provided by zalendo zalenium is another docker grid container 
this kind a wrapper on top of selenium grid infostructure 
to start with zalenium ........ 

https://opensource.zalando.com/zalenium/

1st    docker pull elgalu/selenium    ---- >>> 
2nd    docker pull dosel/zalenium
3rd    docker run --rm -ti --name zalenium -p 4444:4444 \
      -v /var/run/docker.sock:/var/run/docker.sock \
      -v /tmp/videos:/home/seluser/videos \
      --privileged dosel/zalenium start

docker stop zalenium  ----->>> will stop 

these are the steps to start zalenium 
advantage of the zalenium is providing with live view just need to go to the url side 
here ...   localhost:4444/grid/admin/live     ---->> admin live added manually then you will be able to see whats the happening internally
then go    http://localhost:4444/dashboard/    ----->>> it will provide u with the report and recorded video thats awesome
like any defect error in executing u can download the vodeo and then attach it to the jira 
its internally call vnc once is done it will disconnect the live connection





----------------------------------------------------------------------------------------------------------------------------------------------------------------------------



Saturday June 26 2021
New notes about Selenium grid 
Selenium grid is combination of hub and nodes hub is connected with nodes 
When should testers use Selenium Grid?
To run tests on multiple browsers and their versions, different devices, and operating systems
To reduce the time that a test suite takes to complete execution
To do cross browser and cross platform testing 
To use docker we have to download images on top of images we are creating containers

docker --version
docker ps -a       minus a means all
docker images

Basically downloading 3 images hub chrome and Firefox and on top of that we creating containers


Docker pull it will only pull the image not creating container 
These are linux based images 
docker pull selenium/hub
docker pull selenium/node-chrome-debug
docker pull selenium/node-firefox-debug
docker run -d -p 4444:4444 --name selenium-hub-opencart-app -P selenium/hub           -> starting hub 
docker ps -a                 ->checking now container created 
docker run -d --link selenium-hub-opencart-app:hub -P selenium/node-chrome-debug         -> -d detach mode --link linking with the name we created earlier and connecting with the hub and providing image 
Now starting Firefox 
docker run -d --link selenium-hub-opencart-app:hub -P selenium/node-firefox-debug
Just using docker manually we can run these two commands and we can create as much as container we want 
For example 4 Firefox 4 chrome 

Then download vnc viewer to visualize the actual running test cases 
Then go to your driver factory class in eclipse setup desired capabilities class 
With the reference name setting chrome and Firefox options capabilities 
Then with tldriver starting our web driver url and reading url components from properties file 
Then running our xml file 

Docker rm (conteiner id) will delete container 
Docker rmi (image id ) will delete image 
Docker system prune -a     will delete all the images and containers at once 

https://github.com/SeleniumHQ/docker-selenium/tree/selenium-3      ----> Url for docker compose file 


Creating folder under folder one file to store docker-compose.yml file 
Then going To terminal that directory where you store yml file 
Ls it will show you that file is there 
Then run this command
docker-compose -v 
To see version of the compose file once u have compose file it will automatically download compose 
Then run 
docker-compose up -d

To scale up browser u can use this command 
docker-compose up --scale firefox=3 -d

Note: when we writing docker-compose up   here without -d it will show all the logs and at the end it will 
block the terminal so we can not execute next command again 
Its better practice to use with -d 

-----------------------------------------------------------------------------------------------------------

First make docker-compose down and use docker-compose system prune  

zalenium grid to use it go 
https://opensource.zalando.com/zalenium/
To see steps 

1st
  # Pull docker-selenium
    docker pull elgalu/selenium
    
2nd
   # Pull Zalenium
    docker pull dosel/zalenium


3rd
     docker run --rm -ti --name zalenium -p 4444:4444 \
      -v /var/run/docker.sock:/var/run/docker.sock \
      -v /tmp/videos:/home/seluser/videos \
      --privileged dosel/zalenium start \
      --desiredContainers 4 \
      --timeZone "America/New_York"\
      --gridUser Jeyhun \
      --gridPassword test5758




If you provide username and password in zalenium 
Don't forget pass same username and pwd on your properties file along with hub url 
For example 
huburl = http://Jeyhun:test5758@localhost:4444/wd/hub


You can pass from https://opensource.zalando.com/zalenium/ web site exact instruction 
As I have shown on top how to add some instruction 
For example to change time zone 
Or add more browsers 
You can add user name and password to zalenium in order to prevent from outside access 

Time zone for us.  America/New_York


If you are windows user after 4444:4444 \
And docker.sock \ 
Change back slash to ^ char 
Then run it

Go to http://localhost:4444/dashboard

You can replace localhost for the IP/machine name where Zalenium is running
Check all the recorded videos and aggregated logs after your tests completed

Go to  to see live your test cases 
http://localhost:4444/grid/admin/live

Live preview and dashboard concept are so awesome in zalenium grid 
Lets say any test cases failed zalenium also while running test cases its also recording 
So if u see any defect or bug or any blockers you can assign it to developers easily 


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Selenoid Grid notes
To use selenoid grid we need selenoid ui and selenoid hub images along with docker compose file 
Selenoid ui is like in the form of application user interface
With selenoid grid 
We don't need to pass chrome or Firefox images to docker compose file 
Only two images selenoid ui and selenoid hub images we have to maintain
For browsers we need another browser.json file to download browser and interact with docker-compose file 
https://aerokube.com/selenoid/latest/#_getting_started.  

Create compose.yml,  browser.json file under one folder then access to that folder from 
Terminal 

Run.  docker-compose up -d 

Then try to run firefox or chrome versions by manual because 
Compose file it not providing you with browser versions why because there too Many browser versions 
Out there if you want based on your requirements you can download any browser you want by using 
docker pull selenoid/vnc:firefox_57.0    command in terminal 
Here vnc for visualization of browser 
So to find all the downloadable versions go -->  https://hub.docker.com/
Find selenoid chrome or firefox go to the tags section you will find all the versions 



To start with selenoid first we have to have compose.yml file  with all configuration of chrome firefox 
Then we need browser.json file with all configuration of browsers and their versions 
So 
Docker-compose file will read the browser.json file 
It will interact with it then it will setup the infrastructure 
And its possible to see actual running process with selenoid ui
Selenoid is not providing image installation and container creation that's the limitations but its actually intentionally by solenoid guys 

To link selenoid with our local editor for example eclipse first I prefer to mention about browser version in my xml file 
<parameter name="browserversion" value="57" />  
Why I prefer in xml file because I ll give liberty to the specific test which browser version u want to execute 
But if I declare browser version in my config file and read by properties class it will be so lengthy and more configuration 
Then I have my driver factory class adding setCapability methods refer my GitHub 
                         cap.setCapability("browserName", "chrome");
    			cap.setCapability("browserVersion", browserVersion);
    			cap.setCapability("enableVNC", true);
  
Another thing in basetest as parameter im passing browser and browser versions 
Which it will read this parameter from xml file 
And in config file also maintains one browser version key pair format but value is nothing just declaring browserversion = 
And in the driver factory class also declaring String browser version since we have browser version in prop file bu prop class ref name 
Getting browser version
Then inside init_remote driver method im providing one holding param as String browserVersion 
And same browser version Im passing inside initremote method 

Browsers.json file 
If you pay close attention in the documentation of browsers.json  they have not written anything about path: /wd/hub

 {
    "firefox": {
        "default": "57.0",
        "versions": {
            "57.0": {
                "image": "selenoid/vnc:firefox_57.0",
                "port": "4444",
                "path": "/wd/hub"
            }
        },
        "versions": {
            "83.0": {
                "image": "selenoid/vnc:firefox_83.0",
                "port": "4444",
                "path": "/wd/hub"
            }
        }
    },

    "chrome": {
        "default": "64.0",
        "versions": {
            "64.0": {
                "image": "selenoid/vnc:chrome_64.0",
                "port": "4444",
                "path": "/"
            }
        },


        "versions": {
            "89.0": {
                "image": "selenoid/vnc:chrome_89.0",
                "port": "4444",
                "path": "/"
            }
        },

        "versions": {
            "90.0": {
                "image": "selenoid/vnc:chrome_90.0",
                "port": "4444",
                "path": "/"
            }
        }


    }
}





Docker-compose.vml file 
Here - "/Users/jey/Downloads/dockergrid/selenoid2/newselenoid:/etc/selenoid"   -> is just directory of newselenoid folder 
And this is the directory of video folder  -> - "/Users/jey/Downloads/dockergrid/selenoid2/newselenoid/video:/opt/selenoid/video"
Just copy below code and change directory to your own computer directory and use it


version: '3'
services:
  selenoid:
   network_mode: bridge
   image: aerokube/selenoid
   volumes:
     - "/Users/jey/Downloads/dockergrid/selenoid2/newselenoid:/etc/selenoid"
     - "/var/run/docker.sock:/var/run/docker.sock"
     - "/Users/jey/Downloads/dockergrid/selenoid2/newselenoid/video:/opt/selenoid/video"
   environment:
     - OVERRIDE_VIDEO_OUTPUT_DIR=/opt/selenium/video
     - TZ=Europe/Amsterdam
   command: -listen :4444 -conf /etc/selenoid/browsers.json -video-output-dir /opt/selenoid/video/ -video-recorder-image selenoid/video-recorder:latest-release -timeout 3m -limit 10

   ports:
     - "4444:4444"

  selenoid-ui:
    image: "aerokube/selenoid-ui"
    network_mode: bridge
    links:
      - selenoid
    ports:
      - "8080:8080"
    command: ["--selenoid-uri", "http://selenoid:4444"]   




























































